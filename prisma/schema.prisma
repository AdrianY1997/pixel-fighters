// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id          String        @id @default(uuid())
  user_name        String
  user_email       String
  user_password    String
  user_level       String
  user_role        Int
  user_datecreated DateTime?
  Comment          Comment[]
  DojoMember       DojoMember[]
  Publication      Publication[]
}

model Category {
  category_id          String  @id @default(uuid())
  category_name        String?
  category_description String?

  Dojo Dojo[]
}

model Dojo {
  dojo_id          String        @id @default(uuid())
  dojo_name        String
  dojo_description String
  dojo_category    String
  dojo_category_id Category      @relation(fields: [dojo_category], references: [category_id])
  Publication      Publication[]
  DojoMember       DojoMember[]
}

model Publication {
  publication_id           String    @id @default(uuid())
  publication_title        String
  publication_content      String
  publication_calification Float
  publication_datecreated  DateTime
  publication_event        Int
  publication_dojo         String
  publication_member_id    User      @relation(fields: [publication_member], references: [user_id])
  Comment                  Comment[]
  publication_dojo_id      Dojo      @relation(fields: [publication_dojo], references: [dojo_id])
  publication_member       String
}

model Comment {
  comment_id          String      @id @default(uuid())
  comment_member      String
  comment_publication String
  comment_datecreated DateTime
  comment_description String
  member_id           User        @relation(fields: [comment_member], references: [user_id])
  publication_id      Publication @relation(fields: [comment_publication], references: [publication_id])
}

model DojoMember {
  member_id      String @id @default(uuid())
  member_user    String
  member_dojo    String
  member_user_id User   @relation(fields: [member_user], references: [user_id])
  member_dojo_id Dojo   @relation(fields: [member_dojo], references: [dojo_id])
}
